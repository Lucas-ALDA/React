<?php

namespace Container7fY5407;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_IQeN_U2Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.IQeN.u2' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.IQeN.u2'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\ContactController::index' => ['privates', '.service_locator.LJY27LS', 'get_ServiceLocator_LJY27LSService', true],
            'App\\Controller\\TodoController::delete' => ['privates', '.service_locator.WYf3Hmo', 'get_ServiceLocator_WYf3HmoService', true],
            'App\\Controller\\TodoController::edit' => ['privates', '.service_locator.WYf3Hmo', 'get_ServiceLocator_WYf3HmoService', true],
            'App\\Controller\\TodoController::index' => ['privates', '.service_locator.KVUZeCJ', 'get_ServiceLocator_KVUZeCJService', true],
            'App\\Controller\\TodoController::new' => ['privates', '.service_locator.KVUZeCJ', 'get_ServiceLocator_KVUZeCJService', true],
            'App\\Controller\\TodoController::show' => ['privates', '.service_locator.IHxLxYP', 'get_ServiceLocator_IHxLxYPService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Controller\\ContactController:index' => ['privates', '.service_locator.LJY27LS', 'get_ServiceLocator_LJY27LSService', true],
            'App\\Controller\\TodoController:delete' => ['privates', '.service_locator.WYf3Hmo', 'get_ServiceLocator_WYf3HmoService', true],
            'App\\Controller\\TodoController:edit' => ['privates', '.service_locator.WYf3Hmo', 'get_ServiceLocator_WYf3HmoService', true],
            'App\\Controller\\TodoController:index' => ['privates', '.service_locator.KVUZeCJ', 'get_ServiceLocator_KVUZeCJService', true],
            'App\\Controller\\TodoController:new' => ['privates', '.service_locator.KVUZeCJ', 'get_ServiceLocator_KVUZeCJService', true],
            'App\\Controller\\TodoController:show' => ['privates', '.service_locator.IHxLxYP', 'get_ServiceLocator_IHxLxYPService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
        ], [
            'App\\Controller\\ContactController::index' => '?',
            'App\\Controller\\TodoController::delete' => '?',
            'App\\Controller\\TodoController::edit' => '?',
            'App\\Controller\\TodoController::index' => '?',
            'App\\Controller\\TodoController::new' => '?',
            'App\\Controller\\TodoController::show' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\ContactController:index' => '?',
            'App\\Controller\\TodoController:delete' => '?',
            'App\\Controller\\TodoController:edit' => '?',
            'App\\Controller\\TodoController:index' => '?',
            'App\\Controller\\TodoController:new' => '?',
            'App\\Controller\\TodoController:show' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
